name: Deploy my Lambda Function

# trigger on all push events to main branch
on: 
  push:
    branches:
      - main

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Install linting libraries
        run: |
            cd function
            pip install flake8
      - name: Lint with flake8
        run: |
            # Select identifies which errors should cause the job to fail
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # The exit zero flag will show errors as warnings and not fail the run
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
  
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://${{ vars.BUCKET_NAME }}/${{ github.repository }}/${{ github.sha }}.zip

  test:  
    runs-on: ubuntu-latest  
    needs: upload  
    steps:  
      - name: Configure AWS credentials  
        uses: aws-actions/configure-aws-credentials@v1  
        with:  
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
          aws-region: us-east-1  
      - name: Create test function  
        run: |  
            aws lambda create-function --function-name ${{ vars.TEST_FUNCTION }} \  
              --code S3Bucket=${{ vars.BUCKET_NAME}},S3Key=${{ github.sha }}.zip \  
              --handler lambda_function.lambda_handler --runtime python3.8 \  
              --role arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/my-lambda-role  
      - name: Wait 30 seconds  
        run: sleep 30  
      - name: Destroy test function  
        if: ${{ always() }}  
        run: aws lambda delete-function --function-name ${{ vars.TEST_FUNCTION }}


  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update function code
        run: |
            aws lambda update-function-code \
              --function-name ${{ vars.FUNCTION_NAME }} \
              --s3-bucket ${{ vars.BUCKET_NAME }} \
              --s3-key ${{ github.repository }}/${{ github.sha }}.zip \
              --publish
